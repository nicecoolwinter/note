
# -*- coding: utf-8 -*-

li = [0, 1, 2, 3, 4]       # 第一次指派名稱li於全域範圍，指向串列物件
a = 3                      # 第一次指派名稱a，指向整數物件3
a = len(li)                # 名稱a、li位於全域範圍，在全域範圍內沒有名稱len，
                           # 到內建範圍去找，找到了內建函式len
                           
b = sum(li)                # 第一次指派名稱b，名稱sum位於內建範圍，li在全域

def foo_1(a, b):           # 第一次指派名稱foo_1，指向新建立的函式物件，
    d = a + b - c          # 區域名稱a、b，掩蓋住全域名稱a與b。
    return d               # d第一次指派。
                           # c雖然目前看不到，但尚未執行函式體，所以不會出錯。
    
def foo_2(a, b):           # 第一次指派名稱foo_2，指向新建立的函式物件，
    def bar(x):            # 在區域（函式）範圍內也可有def述句，
        return x ** 2      # 名稱bar位於foo_2的區域範圍內，不在全域範圍
    len = a * b + bar(c)   # 在區域範圍內第一次指派名稱len，掩蓋住內建函式len
    return len
                            # 此時尚未執行def bar(x):述句
    
c = 5                      # 在全域範圍內第一次指派名稱c
m = foo_1(a, b)            # 在全域範圍找到名稱foo_1，是個函式
n = foo_2(a, b+2+len(li))  # 在內建範圍找到名稱len
                            # 呼叫foo_2，進入foo_2函式的範圍，執行foo_2函式體，
                           # 此時才定義函式bar（執行def述句），在foo_2範圍裡產生名稱bar

# bar(3)                   # 若執行會發生「找不到名稱bar」的錯誤
